/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sqlwithlucene;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import java.io.File;
import java.io.FileFilter;
import java.io.FileReader;
import java.io.IOException;

import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.index.CorruptIndexException;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.queryParser.ParseException;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.search.TopDocs;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.util.Version;

/**
 *
 * @author coderjp
 */
public class TriggerTable extends javax.swing.JFrame {
    String name;
    String pass;
    String db;
    /**
     * Creates new form TriggerTable
     */
    public TriggerTable() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        table_name = new javax.swing.JTextField();
        tbname = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Table name ");

        tbname.setText("Create Trigger");
        tbname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbnameMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(table_name, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbname)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(table_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbname))
                .addContainerGap(249, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbnameMouseClicked
        // TODO add your handling code here:
        String table_name = tbname.getText();
        
        create_table_trigger();
    }//GEN-LAST:event_tbnameMouseClicked

    /**
     * @param args the command line arguments
     */
    
    private void create_table_trigger(){
        try(Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/"+db, name, pass);
         Statement stmt = conn.createStatement();
      ) {		      
             //create trigger
             String table_name="student";
             ResultSet rs=stmt.executeQuery("SELECT COLUMN_NAME\n" +
        "FROM INFORMATION_SCHEMA.COLUMNS\n" +
        "WHERE TABLE_NAME = '"+table_name+"'\n" +
        "ORDER BY ORDINAL_POSITION;");
        
        String ntrigger="";
        String otrigger="";
        
        while(rs.next())  {
            ntrigger+="new."+rs.getString(1)+",',',";
            otrigger+="old."+rs.getString(1)+",',',";
        } 
            System.out.println(ntrigger);
        
        String nid=ntrigger.split(",")[0];
        String oid=otrigger.split(",")[0];
        ntrigger=ntrigger.substring(0,ntrigger.length()-5);
        
        String sql1="create trigger if not exists tri_"+table_name+"\n" +
                "after insert on student\n" +
                "for each row\n" +
                "begin\n" +
                "INSERT INTO demo(tname,tid,ope,data,date)\n" +
                "values ('Student',new.sid,'Insert',json_object('id',new.sid,'name',new.name,'regno',new.regno,'age',new.age,'city',new.city),current_timestamp());\n" +
                "end";
        PreparedStatement pstmt1 = conn.prepareStatement(sql1);
        pstmt1.execute();
//        
        String sql2="create trigger if not exists tru_"+table_name+"\n"
                + "after update on student\n"
                + "for each row\n"
                + "begin\n"
                + "INSERT INTO demo(tname,tid,ope,data,date)\n"
                + "values ('Student',new.sid,'Update',json_object('id',new.sid,'name',new.name,'regno',new.regno,'age',new.age,'city',new.city),current_timestamp());\n"
                + "end";
        PreparedStatement pstmt2 = conn.prepareStatement(sql2);
        pstmt2.execute();
//        
        String sql3="create trigger if not exists trd_"+table_name+"\n"
                + "after delete on student\n"
                + "for each row\n"
                + "begin\n"
                + "INSERT INTO demo(tname,tid,ope,data,date)\n"
                + "values ('Student',old.sid,'Delete',json_object('id',old.sid),current_timestamp());\n"
                + "end";
        PreparedStatement pstmt3 = conn.prepareStatement(sql3);
        pstmt3.execute();        
        
        conn.close();
        
        JOptionPane.showMessageDialog(this,"Trigger Created Sucessfull");
             

         
      } catch (SQLException e) {
         e.printStackTrace();
      } 
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TriggerTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TriggerTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TriggerTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TriggerTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TriggerTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField table_name;
    private javax.swing.JButton tbname;
    // End of variables declaration//GEN-END:variables
}
